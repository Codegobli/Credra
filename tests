### 🔐 pay() Function – Test Case Documentation

Handles user-initiated escrow payment into the Credra contract using allowed ERC20 tokens.

---

#### ✅ Test Case 1: Valid Payment
Scenario: User successfully pays with allowed token and valid inputs.  
Steps:
- Call addAllowedToken() with test token.
- Approve contract to spend 1000 tokens.
- Call pay(token, 1000, recipient, escrowId).

Expected: Payment stored, event emitted.  
Result: ✅ Passed

---

#### ❌ Test Case 2: Zero Amount
Scenario: Try to pay with _amount = 0.  
Expected: Revert with ZeroAmount().  
Result: ✅ Passed

---

#### ❌ Test Case 3: Duplicate Escrow ID
Scenario: Reuse an already existing escrowId.  
Expected: Revert with EscrowIdExists().  
Result: ✅ Passed

---

#### ❌ Test Case 4: Invalid Recipient
Scenario: Use zero address as recipient.  
Expected: Revert with InvalidRecipient().  
Result: ✅ Passed

---

#### ❌ Test Case 5: Invalid Token
Scenario: Try paying with a token that wasn’t approved.  
Expected: Revert with InvalidToken().  
Result: ✅ Passed

---

### 🔍 Notes
- **Spender in safeTransferFrom = msg.sender**
- All test tokens approved using approve(contract, amount)
- escrows[escrowId] properly checked for existence

---

### 🧪 Remaining Tests (optional for deeper coverage)
- Revert if safeTransferFrom fails due to low allowance or balance.
- Emitted event verification (can be done in Hardhat test suite).
